/* Ensure updated code is visible */
.updated-code {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
    margin: 0 !important;
    background: none !important; /* Ensure it blends seamlessly */
}

/* Ensure original code is visible when `.hidden` is removed */
.original-code:not(.hidden) {
    display: inline-block !important;
    visibility: visible !important;
    opacity: 1 !important;
    height: auto !important;
    margin: initial !important;
    }

/* Ensure code container is visible but collapsed */
.code-container { 
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 0 !important; /* Remove any rounded corners if needed */
}

/* When expanded, it smoothly opens */
.expanded .code-container { 
    max-height: 1000px;
}

/* Ensure hidden class properly hides elements */
.hidden {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
}

/* Grid display for consistent line alignment */
pre code.hljs {
    display: grid !important;
}
/* Remove padding from general code styling */
code.hljs {
    padding: 0 !important;
    margin: 0 !important;
}

/* Ensure added-line spans do not wrap across multiple lines */
.added-line {
    display: flex !important;
    background: var(--color-diff-blob-addition-bg, #e6ffed);
    border-left: 6vw solid #28a745 !important;
    color: #59636e;
    width: 100%;
    line-height: 0.5;
    white-space: pre-wrap;
    position: relative; /* Keeps `+` positioned properly */
    margin: 0 !important;
    padding: 0.2em 0.5em;
}

   

/* âœ… Ensure `+` symbol is properly aligned */
.diff-symbol {
    color: #28a745;
    font-weight: bold;
    margin-right: 6px;
    display: inline-block;
    width: 12px;
    text-align: center;
}

/* âœ… Remove the border when multiple .added-line are next to each other */
.added-line + .added-line {
    border-top: none;
}

/* Hide original code by default */
.original-code {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
    height: 0 !important;
    margin: 0 !important;
    padding-left: 2vw !important;
    white-space: pre-wrap;
    border-left: 6vw solid #28a745 !important;
}
.expand-button,
.copy-button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 14px;
}
/* ðŸ”¹ Code Header (Filename + Buttons) */
.code-header {
    background: #eaecef !important;
    padding: 8px;
    font-weight: bold;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
body {
    font-family: monospace;
    background-color: #f6f8fa;
    padding: 20px;
}

/* ðŸ”¹ Code Block Styling */
.code-block {
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden;
    font-family: monospace;
    transition: max-height 0.3s ease-in-out; /* Expand smoothly */
    background: #ffffff !important; /* Force background */
}


/* Expand Button Fix */
.expand-button {
    cursor: pointer;
}

/* Ensure code doesn't break layout */
pre code {
    display: grid !important;
    overflow-x: auto !important;
}
/* Tooltip Styling */
.tooltip {
    position: absolute;
    background-color: #333;
    color: #fff;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-in-out;
    z-index: 1000;
}
.tooltip-container {
    position: relative;
    display: inline-block;
}
.tooltip-trigger:hover .tooltip {
    opacity: 1;
    visibility: visible;
}
/* Base styles */
.hljs {
    font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
    font-size: 14px;
    background: #f6f8fa;
    color: #24292e;
    padding: 0.2em 0.4em;
    border-radius: 3px;
}

/* Keywords (e.g., public, class, return) */
.hljs-keyword {
    color: #d73a49; /* Red */
    font-weight: bold;
}

/* Data types, Classes, and Method names */
.hljs-title {
    color: #6f42c1; /* Purple */
}

/* String literals */
.hljs-string {
    color: #032f62; /* Blue */
}

/* Function parameters */
.hljs-params {
    color: #005cc5; /* Lighter Blue */
}

/* Numbers and constants */
.hljs-number {
    color: #005cc5;
}

/* Comments */
.hljs-comment {
    color: #6a737d; /* Gray */
    font-style: italic;
}

/* Operators (=, +, -) */
.hljs-operator {
    color: #d73a49;
}

/* Parentheses, brackets */
.hljs-punctuation {
    color: #24292e; /* Dark Gray */
}

/* Imports (e.g., using ChatApp.Models) */
.hljs-namespace {
    color: #22863a; /* Green */
}

/* Class Names */
.hljs-class-name {
    color: #6f42c1; /* Purple */
}

/* Method Names */
.hljs-function {
    color: #005cc5; /* Lighter Blue */
}

/* Boolean values (true, false) */
.hljs-literal {
    color: #d73a49; /* Red */
}

/* Removed line (diff) */
.removed-line {
    background-color: #ffebe9; /* Light red */
    border-left: 3px solid #d73a49; /* Red border */
    display: block;
    padding: 0.2em 0.5em;
    margin: 0;
}

 .tab-container {
            width: 100%;
            max-width: 800px;
            margin: auto;
            background: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .tabs {
            display: flex;
            background: #007bff;
            color: white;
        }

        .tab {
            flex: 1;
            text-align: center;
            padding: 10px;
            cursor: pointer;
            font-weight: bold;
            transition: background 0.3s;
        }

        .tab.active {
            background: #0056b3;
        }

        .content {
            display: none;
            padding: 15px;
            background: #f4f4f4;
        }

        .content.active {
            display: block;
            animation: fadeIn 0.3s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(5px); }
            to { opacity: 1; transform: translateY(0); }
        }
